document.addEventListener("DOMContentLoaded",(()=>{})),window.onload=()=>{$(".js-slider").each(((e,s)=>{const o=$(s).closest(".js-slider-wrapper").find(".js-arrow-count");$(s).on("init reInit afterChange",(function(e,s,t,r){const n=`<div class="slider__current">${parseInt(s.currentSlide+1)}</div>/${s.slideCount}`;o.html(n)}));let t=$(s).closest(".js-slider-wrapper").find(".js-arrow-prev"),r=$(s).closest(".js-slider-wrapper").find(".js-arrow-next");$(s).slick({slidesToShow:2,slidesToScroll:1,responsive:[{breakpoint:768,settings:{slidesToShow:1}},{breakpoint:480,settings:{slidesToShow:1}}],nextArrow:r,prevArrow:t})}))},$(document).ready((()=>{$(".js-mask").inputmask({mask:"99-99-99-99"});const e=document.querySelectorAll(".js-popup-open"),s=document.querySelector(".js-popup-close");e.forEach((e=>{e.addEventListener("click",(e=>{document.querySelector(".js-popup").classList.add("active"),document.body.classList.add("withPopup")}))})),s.addEventListener("click",(e=>{document.querySelector(".js-popup").classList.remove("active"),document.body.classList.remove("withPopup")})),window.onscroll=function(){window.pageYOffset>90?o.classList.add("sticky"):o.classList.remove("sticky")};var o=document.querySelector(".js-sticky");o.offsetTop}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbS5qcyJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3ciLCJvbmxvYWQiLCIkIiwiZWFjaCIsImluZGV4IiwiZWxlbSIsIiRzdGF0dXMiLCJjbG9zZXN0IiwiZmluZCIsIm9uIiwiZXZlbnQiLCJzbGljayIsImN1cnJlbnRTbGlkZSIsIm5leHRTbGlkZSIsIiRjb3VudCIsInBhcnNlSW50Iiwic2xpZGVDb3VudCIsImh0bWwiLCJwcmV2IiwibmV4dCIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwicmVzcG9uc2l2ZSIsImJyZWFrcG9pbnQiLCJzZXR0aW5ncyIsIm5leHRBcnJvdyIsInByZXZBcnJvdyIsInJlYWR5IiwiaW5wdXRtYXNrIiwibWFzayIsImJ0bnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnRuQ2xvc2UiLCJxdWVyeVNlbGVjdG9yIiwiZm9yRWFjaCIsImJ0biIsImUiLCJjbGFzc0xpc3QiLCJhZGQiLCJib2R5IiwicmVtb3ZlIiwib25zY3JvbGwiLCJwYWdlWU9mZnNldCIsImhlYWRlciIsIm9mZnNldFRvcCJdLCJtYXBwaW5ncyI6IkFBQ0FBLFNBQVNDLGlCQUFpQixvQkFBb0IsS0FJeEMsSUFLTkMsT0FBT0MsT0FBUyxLQUlTQyxFQUFFLGNBRVJDLE1BQUssQ0FBQ0MsRUFBT0MsS0FFMUIsTUFBTUMsRUFBVUosRUFBRUcsR0FBTUUsUUFBUSxzQkFBc0JDLEtBQUssbUJBRTNETixFQUFFRyxHQUFNSSxHQUFHLDJCQUEyQixTQUFVQyxFQUFPQyxFQUFPQyxFQUFjQyxHQUUxRSxNQUFNQyxFQUFTLGdDQUFnQ0MsU0FBU0osRUFBTUMsYUFBZSxZQUFZRCxFQUFNSyxhQUUvRlYsRUFBUVcsS0FBS0gsRUFDZixJQUVBLElBQUlJLEVBQU9oQixFQUFFRyxHQUFNRSxRQUFRLHNCQUFzQkMsS0FBSyxrQkFDbERXLEVBQU9qQixFQUFFRyxHQUFNRSxRQUFRLHNCQUFzQkMsS0FBSyxrQkFFdEROLEVBQUVHLEdBQU1NLE1BQU0sQ0FDWlMsYUFBYyxFQUNkQyxlQUFnQixFQUNoQkMsV0FBWSxDQUFDLENBQ1RDLFdBQVksSUFDWkMsU0FBVSxDQUNSSixhQUFjLElBR2xCLENBQ0VHLFdBQVksSUFDWkMsU0FBVSxDQUNSSixhQUFjLEtBSXBCSyxVQUFXTixFQUNYTyxVQUFXUixHQUNYLEdBT0YsRUFHTmhCLEVBQUVKLFVBQVU2QixPQUFNLEtBQ2hCekIsRUFBRSxZQUFZMEIsVUFBVSxDQUN0QkMsS0FBTSxnQkFHUixNQUFNQyxFQUFPaEMsU0FBU2lDLGlCQUFpQixrQkFDakNDLEVBQVdsQyxTQUFTbUMsY0FBYyxtQkFFeENILEVBQUtJLFNBQVFDLElBQ1hBLEVBQUlwQyxpQkFBaUIsU0FBU3FDLElBQzVCdEMsU0FBU21DLGNBQWMsYUFBYUksVUFBVUMsSUFBSSxVQUNsRHhDLFNBQVN5QyxLQUFLRixVQUFVQyxJQUFJLFlBQVksR0FDeEMsSUFHSk4sRUFBU2pDLGlCQUFpQixTQUFTcUMsSUFDakN0QyxTQUFTbUMsY0FBYyxhQUFhSSxVQUFVRyxPQUFPLFVBQ3JEMUMsU0FBU3lDLEtBQUtGLFVBQVVHLE9BQU8sWUFBWSxJQUs3Q3hDLE9BQU95QyxTQUFXLFdBWVp6QyxPQUFPMEMsWUFBYyxHQUN2QkMsRUFBT04sVUFBVUMsSUFBSSxVQUVyQkssRUFBT04sVUFBVUcsT0FBTyxTQWI1QixFQUdBLElBQUlHLEVBQVM3QyxTQUFTbUMsY0FBYyxjQUd2QlUsRUFBT0MsU0FTcEIiLCJmaWxlIjoiY3VzdG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcGxhY2VkIHRoaXMgZnVuY3Rpb25zIGluIERPTUNvbnRlbnRMb2FkZWQsIHNpbmNlIGFsbCB5b3UgbmVlZCB0byBkbyB0byBydW4gaXQgaXMgdG8gbG9hZCB0aGUgRE9NXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgLy8gSUlGRSBjb2RlIHdyYXBwaW5nXHJcbiAgKCgpID0+IHtcclxuXHJcbiAgfSkoKTtcclxufSk7XHJcblxyXG5cclxuLy8gcGxhY2VkIHRoaXMgZnVuY3Rpb24gaW4gd2luZG93Lm9ubG9hZCBhcyB0aGVyZSBhcmUgc3R5bGUgZmlsZXMgbmVlZGVkIGluIGNhbGN1bGF0aW9uc1xyXG53aW5kb3cub25sb2FkID0gKCkgPT4ge1xyXG4gIC8vIElJRkUgY29kZSB3cmFwcGluZ1xyXG4gICgoKSA9PiB7XHJcblxyXG4gICAgbGV0ICRzbGlja0VsZW1lbnRzID0gJCgnLmpzLXNsaWRlcicpO1xyXG5cclxuICAgICRzbGlja0VsZW1lbnRzLmVhY2goKGluZGV4LCBlbGVtKSA9PiB7XHJcblxyXG4gICAgICBjb25zdCAkc3RhdHVzID0gJChlbGVtKS5jbG9zZXN0KCcuanMtc2xpZGVyLXdyYXBwZXInKS5maW5kKFwiLmpzLWFycm93LWNvdW50XCIpO1xyXG5cclxuICAgICAgJChlbGVtKS5vbignaW5pdCByZUluaXQgYWZ0ZXJDaGFuZ2UnLCBmdW5jdGlvbiAoZXZlbnQsIHNsaWNrLCBjdXJyZW50U2xpZGUsIG5leHRTbGlkZSkge1xyXG5cclxuICAgICAgICBjb25zdCAkY291bnQgPSBgPGRpdiBjbGFzcz1cInNsaWRlcl9fY3VycmVudFwiPiR7cGFyc2VJbnQoc2xpY2suY3VycmVudFNsaWRlICsgMSl9PC9kaXY+LyR7c2xpY2suc2xpZGVDb3VudH1gO1xyXG5cclxuICAgICAgICAkc3RhdHVzLmh0bWwoJGNvdW50KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBsZXQgcHJldiA9ICQoZWxlbSkuY2xvc2VzdCgnLmpzLXNsaWRlci13cmFwcGVyJykuZmluZCgnLmpzLWFycm93LXByZXYnKTtcclxuICAgICAgbGV0IG5leHQgPSAkKGVsZW0pLmNsb3Nlc3QoJy5qcy1zbGlkZXItd3JhcHBlcicpLmZpbmQoJy5qcy1hcnJvdy1uZXh0Jyk7XHJcblxyXG4gICAgICAkKGVsZW0pLnNsaWNrKHtcclxuICAgICAgICBzbGlkZXNUb1Nob3c6IDIsXHJcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgcmVzcG9uc2l2ZTogW3tcclxuICAgICAgICAgICAgYnJlYWtwb2ludDogNzY4LFxyXG4gICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgYnJlYWtwb2ludDogNDgwLFxyXG4gICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgbmV4dEFycm93OiBuZXh0LFxyXG4gICAgICAgIHByZXZBcnJvdzogcHJldixcclxuICAgICAgfSk7XHJcblxyXG4gICAgfSk7XHJcblxyXG5cclxuXHJcblxyXG4gIH0pKCk7XHJcbn1cclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcclxuICAkKCcuanMtbWFzaycpLmlucHV0bWFzayh7XHJcbiAgICBtYXNrOiBcIjk5LTk5LTk5LTk5XCIsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuanMtcG9wdXAtb3BlbicpO1xyXG4gIGNvbnN0IGJ0bkNsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLXBvcHVwLWNsb3NlJyk7XHJcblxyXG4gIGJ0bnMuZm9yRWFjaChidG4gPT4ge1xyXG4gICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qcy1wb3B1cCcpLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ3dpdGhQb3B1cCcpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGJ0bkNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtcG9wdXAnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnd2l0aFBvcHVwJyk7XHJcbiAgfSk7XHJcblxyXG5cclxuICAvLyBXaGVuIHRoZSB1c2VyIHNjcm9sbHMgdGhlIHBhZ2UsIGV4ZWN1dGUgbXlGdW5jdGlvblxyXG4gIHdpbmRvdy5vbnNjcm9sbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIG15RnVuY3Rpb24oKVxyXG4gIH07XHJcblxyXG4gIC8vIEdldCB0aGUgaGVhZGVyXHJcbiAgdmFyIGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuanMtc3RpY2t5XCIpO1xyXG5cclxuICAvLyBHZXQgdGhlIG9mZnNldCBwb3NpdGlvbiBvZiB0aGUgbmF2YmFyXHJcbiAgdmFyIHN0aWNreSA9IGhlYWRlci5vZmZzZXRUb3A7XHJcblxyXG4gIC8vIEFkZCB0aGUgc3RpY2t5IGNsYXNzIHRvIHRoZSBoZWFkZXIgd2hlbiB5b3UgcmVhY2ggaXRzIHNjcm9sbCBwb3NpdGlvbi4gUmVtb3ZlIFwic3RpY2t5XCIgd2hlbiB5b3UgbGVhdmUgdGhlIHNjcm9sbCBwb3NpdGlvblxyXG4gIGZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7XHJcbiAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0ID4gOTApIHtcclxuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJzdGlja3lcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcInN0aWNreVwiKTtcclxuICAgIH1cclxuICB9XHJcbn0pOyJdfQ==
